#!/bin/bash
# Personal setup script for my laptop computer
# ~Dragonwolf
# Version 2.0


	#Updating Sudoers File to Add NOPASSWD to User
		read -r -s -p "Enter password: " SUDOPWD && printf "\n"
		echo "$SUDOPWD" | sudo -S sh -c "echo \"david ALL=(ALL) NOPASSWD: ALL\" >&- > /etc/sudoers.d/90-install"

	#Fetching Needed Files
		echo "Fetching needed files"
		cd /tmp || return
		wget https://github.com/Dreamingwolf/Setup-Scripts/raw/master/arch_repos
		wget  https://github.com/Dreamingwolf/Setup-Scripts/raw/master/Dragonbone_hosts

	#Update hosts file
		echo "Updating the hosts file"
		sudo mv -f ./Dragonbone_hosts /etc/hosts
	
	#Create mount point
		echo "Creating needed mount point"
		mkdir /home/david/.home

    #Core Operations
        HOMEPART=/home/david/.home
        HOMEDATA=$( blkid -L Home )
        HOMEFSTAB=$( blkid -s TYPE -o value "$HOMEDATA" )
		HOMEUUID=$( blkid -s UUID -o value "$HOMEDATA" )
        
    #Updating /etc/fstab
        echo "Adding disk to /etc/fstab"
        echo "UUID=$HOMEUUID $HOMEPART $HOMEFSTAB users,exec,rw,auto,noatime 0 2" | sudo tee -a /etc/fstab

	#Setup home folder
		echo "Mounting, setting up, and linking home folder"

	#Mount the UserData Partition to .home
		sudo mount "$HOMEDATA" "$HOMEPART"
			
	#Remove original folders & Install symbolic links
        if [ -d "$HOMEPART/Camera" ]
        then
            if [ -d "/home/david/Camera" ]; then sudo rm -Rf "/home/david/Camera"; fi
            sudo ln -s "$HOMEPART/Camera" "/home/david"
        fi
        if [ -d "$HOMEPART/Documents" ]
        then
            if [ -d "/home/david/Documents" ]; then sudo rm -Rf "/home/david/Documents"; fi
            sudo ln -s "$HOMEPART/Documents" "/home/david"
        fi
        if [ -d "$HOMEPART/Downloads" ]
        then
            if [ -d "/home/david/Downloads" ]; then sudo rm -Rf "/home/david/Downloads"; fi
            sudo ln -s "$HOMEPART/Downloads" "/home/david"
        fi
        if [ -d "$HOMEPART/Etcher" ]
        then
            if [ -d "/home/david/Etcher" ]; then sudo rm -Rf "/home/david/Etcher"; fi
            sudo ln -s "$HOMEPART/Etcher" "/home/david"
        fi
        if [ -d "$HOMEPART/Games" ]
        then
            if [ -d "/home/david/Games" ]; then sudo rm -Rf "/home/david/Games"; fi
            sudo ln -s "$HOMEPART/Games" "/home/david"
        fi
        if [ -d "$HOMEPART/Github" ]
        then
            if [ -d "/home/david/Github" ]; then sudo rm -Rf "/home/david/Github"; fi
            sudo ln -s "$HOMEPART/Github" "/home/david"
        fi
        if [ -d "$HOMEPART/Google_Drive" ]
        then
            if [ -d "/home/david/Google_Drive" ]; then sudo rm -Rf "/home/david/Google_Drive"; fi
            sudo ln -s "$HOMEPART/Google_Drive" "/home/david"
        fi
        if [ -d "$HOMEPART/Links" ]
        then
            if [ -d "/home/david/Links" ]; then sudo rm -Rf "/home/david/Links"; fi
            sudo ln -s "$HOMEPART/Links" "/home/david"
        fi
        if [ -d "$HOMEPART/Music" ]
        then
            if [ -d "/home/david/Music" ]; then sudo rm -Rf "/home/david/Music"; fi
            sudo ln -s "$HOMEPART/Music" "/home/david"
        fi
        if [ -d "$HOMEPART/Pictures" ]
        then
            if [ -d "/home/david/Pictures" ]; then sudo rm -Rf "/home/david/Pictures"; fi
            sudo ln -s "$HOMEPART/Pictures" "/home/david"
        fi
        if [ -d "$HOMEPART/Scripts" ]
        then
            if [ -d "/home/david/Scripts" ]; then sudo rm -Rf "/home/david/Scripts"; fi
            sudo ln -s "$HOMEPART/Scripts" "/home/david"
        fi
        if [ -d "$HOMEPART/Sync" ]
        then
            if [ -d "/home/david/Sync" ]; then sudo rm -Rf "/home/david/Sync"; fi
            sudo ln -s "$HOMEPART/Sync" "/home/david"
        fi
        if [ -d "$HOMEPART/Videos" ]
        then
            if [ -d "/home/david/Videos" ]; then sudo rm -Rf "/home/david/Videos"; fi
            sudo ln -s "$HOMEPART/Videos" "/home/david"
        fi
        if [ -d "$HOMEPART/VPNac" ]
        then
            if [ -d "/home/david/VPNac" ]; then sudo rm -Rf "/home/david/VPNac"; fi
            sudo ln -s "$HOMEPART/VPNac" "/home/david"
        fi
        if [ -d "$HOMEPART/Wallpapers" ]
        then
            if [ -d "/home/david/Wallpapers" ]; then sudo rm -Rf "/home/david/Wallpapers"; fi
            sudo ln -s "$HOMEPART/Wallpapers" "/home/david"
        fi
        if [ -d "$HOMEPART/Working" ]
        then
            if [ -d "/home/david/Working" ]; then sudo rm -Rf "/home/david/Working"; fi
            sudo ln -s "$HOMEPART/Working" "/home/david"
        fi
        if [ -d "$HOMEPART/.gnupg" ]
        then
            if [ -d "/home/david/.gnupg" ]; then sudo rm -Rf "/home/david/.gnupg"; fi
            sudo ln -s "$HOMEPART/.gnupg" "/home/david"
        fi
        if [ -d "$HOMEPART/.gdfuse" ]
        then
            if [ -d "/home/david/.gdfuse" ]; then sudo rm -Rf "/home/david/.gdfuse"; fi
            sudo ln -s "$HOMEPART/.gdfuse" "/home/david"
        fi
        if [ -d "$HOMEPART/.mozilla" ]
        then
            if [ -d "/home/david/.mozilla" ]; then sudo rm -Rf "/home/david/.mozilla"; fi
            sudo ln -s "$HOMEPART/.mozilla" "/home/david"
        fi
        if [ -d "$HOMEPART/.ssh" ]
        then
            if [ -d "/home/david/.ssh" ]; then sudo rm -Rf "/home/david/.ssh"; fi
            sudo ln -s "$HOMEPART/.ssh" "/home/david"
        fi
        if [ -d "$HOMEPART/.steam" ]
        then
            if [ -d "/home/david/.steam" ]; then sudo rm -Rf "/home/david/.steam"; fi
            sudo ln -s "$HOMEPART/.steam" "/home/david"
        fi
        if [ -d "$HOMEPART/.thunderbird" ]
        then
            if [ -d "/home/david/.thunderbird" ]; then sudo rm -Rf "/home/david/.thunderbird"; fi
            sudo ln -s "$HOMEPART/.thunderbird" "/home/david"
        fi
        if [ -d "$HOMEPART/.zoom" ]
        then
            if [ -d "/home/david/.zoom" ]; then sudo rm -Rf "/home/david/.zoom"; fi
            sudo ln -s "$HOMEPART/.zoom" "/home/david"
        fi
        if [ -f "$HOMEPART/.pam-gnupg" ]
        then
            if [ -f "/home/david/.pam-gnupg" ]; then sudo rm -f "/home/david/.pam-gnupg"; fi
            sudo ln -s "$HOMEPART/.pam-gnupg" "/home/david"
        fi

	#Update and Upgrade
    	echo "Updating and Upgrading"
        wget https://aur.archlinux.org/cgit/aur.git/snapshot/yay-bin.tar.gz
        sudo tar -xvf ./yay-bin.tar.gz
        cd yay-bin || return
        makepkg -i
        cd .. || return
        sudo rm -fR ./yay-bin
		cd /tmp || return
    	while read -r; do
            sudo tee -a /etc/pacman.conf
        done < "./arch_repos"
        sudo pacman-key --init
        sudo pacman-key --populate archlinux
        sudo pacman-key --recv-keys 932BA3FA0C86812A32D1F54DAB5964AEB9FEDDDC
        sudo pacman-key --lsign-key 932BA3FA0C86812A32D1F54DAB5964AEB9FEDDDC
        sudo pacman-key --recv-keys 313F5ABD
        sudo pacman-key --lsign-key 313F5ABD
        sudo pacman-key --recv-keys 4B4E7A9523ACD201
        sudo pacman-key --lsign-key 4B4E7A9523ACD201
        sudo pacman-key --recv-keys 7448C890582975CD 
        sudo pacman-key --lsign-key 7448C890582975CD
        curl -O https://download.sublimetext.com/sublimehq-pub.gpg && sudo pacman-key --add sublimehq-pub.gpg && sudo pacman-key --lsign-key 8A8F901A && rm sublimehq-pub.gpg
        sudo pacman -Sy reflector
    	sudo reflector -f 30 -l 30 --number 10 --verbose --save /etc/pacman.d/mirrorlist
    	sudo pacman -Syy
	    yay --editmenu --nodiffmenu --save

    # Overgrive prep
        yay -S --needed libnotify python python2-pyinotify python2-pip python2-gobject libappindicator-gtk3
        sudo pip2.7 install --upgrade google-api-python-client
        sudo pip2.7 install --upgrade oauth2client

    # Main Program install commands
	    yay -S --needed linux-headers pass ruby xorg-server-devel qrencode tk firefox-nightly thunderbird-nightly
	    yay -S --needed p7zip p7zip-gui wimlib overgrive qtwebflix-git zoom discord telegram-desktop-systemqt-notoemoji smplayer smplayer-themes smplayer-skins smtube youtube-dl mplayer
	    yay -S --needed python-pyqt5 drkonqi breeze-icons gst-libav flite kwalletmanager kio-extras kdoctools knetattach kirigami2 qt5-tools catdoc kdeconnect sdl_image sox movit
	    yay -S --needed dvdauthor dvgrab recordmydesktop simplescreenrecorder xine-ui xsane-gimp dvd+rw-tools vcdimager emovix cdrdao transcode openmp dmenu pam-gnupg-git luajit
	    yay -S --needed python-opengl qt5-xmlpatterns qt5-serialport qt5-websockets qt5-connectivity qt5-networkauth kimageformats khtml libappimage clang botan kde-cli-tools opusfile
	    yay -S --needed gnome-boxes libvirt virtualbox virtualbox-guest-dkms virtualbox-guest-iso virtualbox-guest-utils virtualbox-host-dkms sublime-text sublime-merge neofetch
	    yay -S --needed steam steam-fonts pidgin-opensteamworks linux-steam-integration sc-controller-git steamcurses-git proton-git python2-steamodd protonfixes-git gimp obs-studio
	    yay -S --needed lib32-mesa-vdpau lib32-libpulse lib32-jack lib32-libsamplerate lib32-speex lib32-giflib lib32-libldap lib32-gnutls lib32-mpg123 lib32-openal lib32-v4l-utils
	    yay -S --needed lib32-libxcomposite lib32-libxinerama opencl-icd-loader lib32-opencl-icd-loader lib32-libxslt lib32-gst-plugins-base-libs python2-pygments python2-rdflib
	    yay -S --needed lib32-sdl lib32-fluidsynth lib32-opencl-driver lutris hexchat shotwell audacity reaper-bin guvcview jdk-openjdk java-rhino catfish grub-customizer
	    yay -S --needed fusesmb samba cifs-utils exfat-utils ntfs-3g-fuse engrampa arj lzip unrar unace darktable gwenview inkscape okular skanlite hplip xsane xsane-gimp
	    yay -S --needed kipi-plugins kamera kdegraphics-mobipocket chmlib calligra libmediawiki libkvkontakte libwpg libwps libvisio libetonyek pstoedit openjpeg libgit2 curl
	    yay -S --needed openshot simplescreenrecorder libreoffice-fresh libmythes beanshell shellcheck unixodbc postgresql-libs coin-or-mp wqy-zenhei redshift numlockx variety
	    yay -S --needed gv ebtables bridge-utils radvd ceph qemu-block-gluster qemu-block-iscsi qemu-block-rbd qemu-arch-extra python2-pyquery python2-restkit terminator zsh
	    sudo glib-compile-schemas /usr/share/glib-2.0/schemas
	    sudo usermod -aG vboxusers david
	    sudo usermod -aG vboxfs david
    	yay -Syu

    #Add ssh key
        eval "$(ssh-agent -s)"
        ssh-add /home/david/.ssh/id_rsa

	#Cleanup
    	echo "Cleaning up"
    	sudo rm ./Dragonbone_hosts
    	sudo rm ./arch_repos

    	echo "DON'T FORGET TO REBOOT!"

	