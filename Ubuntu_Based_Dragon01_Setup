#!/bin/bash
# Personal setup script for my desktop computer
# ~David F Muller
# Version 3.2

    #Function that will be used to simlink Home folders
        symlink_setup () {
            if [ -e "$HOMEPART/$1" ]; then
                if [ -e "/home/david/$1" ]; then
                    sudo rm -Rf "/home/david/$1"; fi
                sudo ln -s "$HOMEPART/$1" "/home/david";
            else echo "$1 not found in $HOMEPART"
            fi
        }

    #Function to set up the PPAs I use
        ppa_setup () {
            sudo add-apt-repository -yn "ppa:$1"
        }

    #Array to list PPAs for install
        ubuntu_ppas=('canonical-kernal-team/ppa' 'danielrichter2007/grub-customizer' 'graphics-drivers/ppa'
            'linuxuprising/java' 'ubuntu-mozilla-daily/ppa' 'mozillateam/thunderbird-next' 'obsproject/obs-studio'
            'otto-kesselgulasch/gimp' 'teejee2008/ppa' 'webupd8team/y-ppa-manager')
    #Array to list home folders requiring simlinking
        home_folders=('Camera' 'Documents' 'Downloads' 'Etcher' 'Games' 'Github' 'Google_Drive' 'Links' 'Music' 'Pictures'
            'Scripts' 'SteamLibrary' 'Sync' 'Videos' 'VPNac' 'Wallpapers' 'Working' '.gnupg' '.gdfuse' '.mozilla' '.ssh'
            '.steam' '.thunderbird' '.zoom' '.pam-gnupg')

    #Updating Sudoers File to Add NOPASSWD to User
        echo "Sudo password is required for certain commands in this script."
        echo "Entering an incorrect password will cause the script to crash."
        read -r -s -p "Enter password: " SUDOPWD && printf "\n"
        echo "$SUDOPWD" | sudo -S sh -c "echo \"$USER ALL=(ALL) NOPASSWD: ALL\" >&- > /etc/sudoers.d/90-$USER"

	#Fetching Needed Files
        echo "Fetching needed files"
        cd /tmp || return
        wget  https://github.com/Dreamingwolf/Setup-Scripts/raw/master/Dragon01_hosts

    #Update hosts file
        echo "Updating the hosts file"
        sudo hostnamectl set-hostname Dragon01
        sudo cp -f ./Dragon01_hosts /etc/hosts

	#Setup Directories for Mounting
        echo "Creating directories for mounting"
        mkdir /home/david/.home
        sudo mkdir /StorageBunker
        sudo mkdir /Backup

    #Core Operations
        HOMEPART=/home/david/.home
        HOMEDATA=$( sudo blkid --match-token PARTLABEL="Home" -o device )
        HOMEFSTAB=$( sudo blkid -s TYPE -o value "$HOMEDATA" )
        HOMEUUID=$( sudo blkid -s UUID -o value "$HOMEDATA" )

        BACKUPDATA=$( sudo blkid --match-token PARTLABEL="Backup" -o device )
        BACKUPFSTAB=$( sudo blkid -s TYPE -o value "$BACKUPDATA" )
        BACKUPUUID=$( sudo blkid -s UUID -o value "$BACKUPDATA" )

        STORAGEDATA=$( sudo blkid --match-token PARTLABEL="StorageB" -o device )
        STORAGEFSTAB=$( sudo blkid -s TYPE -o value "$STORAGEDATA" )
        STORAGEUUID=$( sudo blkid -s UUID -o value "$STORAGEDATA" )

    #Updating /etc/fstab
        echo "Adding disks to /etc/fstab"
        echo "UUID=$HOMEUUID $HOMEPART $HOMEFSTAB users,exec,rw,auto,noatime 0 2
        UUID=$BACKUPUUID /Backup $BACKUPFSTAB users,exec,rw,auto,noatime 0 2
        UUID=$STORAGEUUID /StorageBunker $STORAGEFSTAB users,exec,rw,auto,noatime 0 2" | sudo tee -a /etc/fstab

	#Setup home folder
        echo "Mounting, setting up, and linking home folder"

	#Mount the UserData Partition to .home
        sudo mount "$HOMEDATA" "$HOMEPART"

	#Remove original folders & Install symbolic links
        for i in "${home_folders[@]}"; do
            symlink_setup "$i"
        done

    #Install PPAs for expanded app access
        for i in "${ubuntu_ppas[@]}"; do
            ppa_setup "$i"
        done
        #Etcher
        echo "deb https://dl.bintray.com/resin-io/debian stable etcher" | sudo tee /etc/apt/sources.list.d/etcher.list
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 379CE192D401AB61
        #Lutris
        ver=$(lsb_release -sr); if [ "$ver" != "19.04" ] && [ "$ver" != "18.10" ] && [ "$ver" != "18.04" ] && [ "$ver" != "16.04" ]; then ver=18.04; fi
        echo "deb http://download.opensuse.org/repositories/home:/strycore/xUbuntu_$ver/ ./" | sudo tee /etc/apt/sources.list.d/lutris.list
        wget -q http://download.opensuse.org/repositories/home:/strycore/xUbuntu_$ver/Release.key -O- | sudo apt-key add -
        #Key for steam (In case it's needed later)
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys B05498B7
        #Virtualbox
        sudo sh -c 'echo "deb http://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib" >> /etc/apt/sources.list.d/virtualbox.list'
        wget -q -O - https://www.virtualbox.org/download/oracle_vbox_2016.asc | sudo apt-key add -
        wget -q -O - https://www.virtualbox.org/download/oracle_vbox.asc | sudo apt-key add -

    #Verify that all userfiles are mine
        sudo chown -R david:david /home/david/*
        sudo chmod -R 777 /home/david/*

	#Update hosts file
        echo "Updating the hosts file"
        sudo hostnamectl set-hostname Dragon01
        sudo cp -f ./Dragon01_hosts /etc/hosts

    #Install additional software
        sudo dpkg --add-architecture i386
        #Overgrive
        wget https://www.thefanclub.co.za/sites/default/files/public/overgrive/overgrive_3.2.3_all.deb
        sudo apt install python-oauth2client
        sudo pip install --upgrade google-api-python-client
        sudo dpkg -i overgrive_3.2.3_all.deb
        sudo apt --fix-broken install -y
        #Steam
        wget https://steamcdn-a.akamaihd.net/client/installer/steam.deb
        sudo dpkg -i steam.deb
        sudo apt --fix-broken install -y
        #Other
        sudo apt install linux-headers pass ruby xorg-server-devel qrencode tk firefox-trunk thunderbird
        sudo apt install p7zip p7zip-gui wimlib overgrive qtwebflix-git zoom discord telegram-desktop-systemqt-notoemoji smplayer smplayer-themes smplayer-skins smtube youtube-dl mplayer
        sudo apt install python-pyqt5 drkonqi breeze-icons gst-libav flite kwalletmanager kio-extras kdoctools knetattach kirigami2 qt5-tools catdoc kdeconnect sdl_image sox movit
        sudo apt install dvdauthor dvgrab recordmydesktop simplescreenrecorder xine-ui xsane-gimp dvd+rw-tools vcdimager emovix cdrdao transcode openmp dmenu pam-gnupg-git luajit
        sudo apt install python-opengl qt5-xmlpatterns qt5-serialport qt5-websockets qt5-connectivity qt5-networkauth kimageformats khtml libappimage clang botan kde-cli-tools opusfile
        sudo apt install gnome-boxes libvirt virtualbox-6.0 sublime-text sublime-merge neofetch
        sudo apt install pidgin-opensteamworks linux-steam-integration sc-controller-git steamcurses-git proton-git python2-steamodd protonfixes-git gimp obs-studio
        sudo apt install mesa-vdpau:i386 libpulse:i386 jack2:i386 libsamplerate:i386 speex:i386 giflib:i386 libldap:i386 gnutls:i386 mpg123:i386 openal:i386 v4l-utils:i386
        sudo apt install libxcomposite:i386 libxinerama:i386 opencl-icd-loader opencl-icd-loader:i386 libxslt:i386 gst-plugins-base-libs:i386 python2-pygments python2-rdflib
        sudo apt install sdl:i386 fluidsynth:i386 opencl-driver:i386 lutris hexchat shotwell audacity reaper-bin guvcview jdk-openjdk java-rhino catfish grub-customizer rawtherapee
        sudo apt install fusesmb samba cifs-utils exfat-utils ntfs-3g-fuse engrampa arj lzip unrar unace darktable gwenview inkscape okular skanlite hplip xsane xsane-gimp
        sudo apt install kipi-plugins kamera kdegraphics-mobipocket chmlib calligra libmediawiki libkvkontakte libwpg libwps libvisio libetonyek pstoedit openjpeg libgit2 curl
        sudo apt install openshot simplescreenrecorder libreoffice-fresh libmythes beanshell shellcheck unixodbc postgresql-libs coin-or-mp wqy-zenhei redshift numlockx variety
        sudo apt install gv ebtables bridge-utils radvd ceph qemu-block-gluster qemu-block-iscsi qemu-block-rbd qemu-arch-extra python2-pyquery python2-restkit terminator zsh
        sudo glib-compile-schemas /usr/share/glib-2.0/schemas
        getent group vboxusers || sudo groupadd vboxusers && sudo usermod -aG vboxusers david
        getent group vboxsf || sudo groupadd vboxsf && sudo usermod -aG vboxfs david
        sudo rm ./overgrive_3.2.3_all.deb
        sudo rm ./steam.deb

     #Add ssh key
        eval "$(ssh-agent -s)"
        sudo chmod 400 /home/david/.ssh/id_rsa
        ssh-add /home/david/.ssh/id_rsa

	#Cleanup
        echo "Cleaning up"
        sudo rm ./Dragon01_hosts

	#Reboot Reminder
        echo "Don't forget to reboot before updating to assure proper disk mounting!!!"
